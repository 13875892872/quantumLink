# 从向量模型开始构建
FROM ghcr.io/1panel-dev/maxkb-vector-model:v1.0.1 AS vector-model

# 使用Python-PG镜像作为基础
FROM ghcr.io/1panel-dev/maxkb-python-pg:python3.11-pg15.8

# 安装必要的依赖
ARG DEPENDENCIES="python3-pip"

RUN apt-get update && \
    apt-get install -y --no-install-recommends $DEPENDENCIES && \
    apt-get clean all  && \
    rm -rf /var/lib/apt/lists/*

# 创建必要的目录
RUN mkdir -p /opt/maxkb/app /opt/maxkb/model /opt/maxkb/conf

# 复制向量模型
COPY --from=vector-model /opt/maxkb/app/model /opt/maxkb/model

# 设置环境变量
ENV MAXKB_CONFIG_TYPE=ENV \
    MAXKB_DB_NAME=maxkb \
    MAXKB_DB_HOST=127.0.0.1 \
    MAXKB_DB_PORT=5432  \
    MAXKB_DB_USER=root \
    MAXKB_DB_PASSWORD=Password123@postgres \
    MAXKB_DB_MAX_OVERFLOW=80 \
    MAXKB_EMBEDDING_MODEL_NAME=/opt/maxkb/model/embedding/shibing624_text2vec-base-chinese \
    MAXKB_EMBEDDING_MODEL_PATH=/opt/maxkb/model/embedding \
    MAXKB_SANDBOX=1 \
    LANG=en_US.UTF-8 \
    PATH=/opt/py3/bin:$PATH \
    POSTGRES_USER=root \
    POSTGRES_PASSWORD=Password123@postgres \
    POSTGRES_MAX_CONNECTIONS=1000 \
    PIP_TARGET=/opt/maxkb/app/sandbox/python-packages \
    PYTHONPATH=/opt/maxkb/app/sandbox/python-packages \
    PYTHONUNBUFFERED=1

# 复制并设置启动脚本(确保使用LF换行符)
COPY installer/init.sql /docker-entrypoint-initdb.d/
COPY installer/run-maxkb.sh /tmp/run-maxkb.sh
RUN tr -d '\r' < /tmp/run-maxkb.sh > /usr/bin/run-maxkb.sh && \
    chmod 755 /usr/bin/run-maxkb.sh && \
    rm /tmp/run-maxkb.sh

# 安装其他必要组件
RUN curl -L --connect-timeout 120 -m 1800 https://resource.fit2cloud.com/maxkb/ffmpeg/get-ffmpeg-linux | sh && \
    mkdir -p /opt/maxkb/app/sandbox/python-packages && \
    chmod 755 /tmp && \
    useradd --no-create-home --home /opt/maxkb/app/sandbox sandbox -g root && \
    chmod g-x /usr/local/bin/* /usr/bin/* /bin/* /usr/sbin/* /sbin/* /usr/lib/postgresql/15/bin/* || true && \
    chmod g+x /usr/local/bin/python* || true && \
    find /etc/ -type f ! -path '/etc/resolv.conf' ! -path '/etc/hosts' | xargs chmod g-rx || true

# 创建虚拟环境
RUN python3 -m venv /opt/py3 && \
    . /opt/py3/bin/activate && \
    pip install --upgrade pip

# 暴露端口
EXPOSE 8080 5432